# coding: utf-8

"""
    traQ v3

    traQ v3 API

    The version of the OpenAPI document: 3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.post_login_request import PostLoginRequest

class TestPostLoginRequest(unittest.TestCase):
    """PostLoginRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostLoginRequest:
        """Test PostLoginRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostLoginRequest`
        """
        model = PostLoginRequest()
        if include_optional:
            return PostLoginRequest(
                name = 'zBAMDTMv2D2ylmgd10Z3UB6U',
                password = 'jUR,rZ#UM/?R,Fp^'
            )
        else:
            return PostLoginRequest(
                name = 'zBAMDTMv2D2ylmgd10Z3UB6U',
                password = 'jUR,rZ#UM/?R,Fp^',
        )
        """

    def testPostLoginRequest(self):
        """Test PostLoginRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
